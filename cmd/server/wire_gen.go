// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"yoomall/apps/app"
	"yoomall/apps/app/handler"
	"yoomall/apps/auth"
	handler2 "yoomall/apps/auth/handler"
	"yoomall/apps/auth/middleware"
	"yoomall/apps/auth/service"
	"yoomall/apps/common"
	handler3 "yoomall/apps/common/handler"
	"yoomall/apps/common/service"
	"yoomall/apps/post"
	"yoomall/apps/views"
	"yoomall/config"
	"yoomall/core/http"
)

// Injectors from wire.go:

func NewApp() httpserver.HttpServer {
	viper := config.NewConfig()
	db := NewDB(viper)
	dtkHandler := handler.NewDtkHandler(viper)
	authMiddlewareGroup := authmiddleware.NewAuthMiddlewareGroup(db)
	menuHandler := handler.NewMenuHandler(db, authMiddlewareGroup)
	jtkHandler := handler.NewJtkHandler(viper)
	defaultApp := app.NewWireDefaultApp(viper, db, dtkHandler, menuHandler, jtkHandler)
	authService := authservice.NewAuthService(db)
	userHandler := handler2.NewUserHandler(db, viper, authService, authMiddlewareGroup)
	userRoleHandler := handler2.NewUserRoleHandler(db, authMiddlewareGroup)
	userTokenHandler := handler2.NewUserTokenHandler(db, authMiddlewareGroup)
	permissionHandler := handler2.NewPermissionHandler(db, authMiddlewareGroup)
	authApp := auth.NewAuthApp(viper, db, authService, userHandler, userRoleHandler, userTokenHandler, permissionHandler)
	postApp := post.NewDefaultApp(viper, db)
	notFoundRecordService := commonservice.NewNotFoundRecordService(db)
	notFoundRecordHandler := handler3.NewNotFoundRecordHandler(db, notFoundRecordService)
	systemConfigService := commonservice.NewSystemConfigService(db)
	systemConfigHandler := handler3.NewSystemConfigHandler(db, systemConfigService, authMiddlewareGroup)
	commonApp := common.NewCommonApp(viper, db, notFoundRecordHandler, systemConfigHandler)
	viewsApp := views.NewViewApp(db, viper)
	doc := NewDoc()
	httpServer := NewHttpServer(viper, defaultApp, authApp, postApp, commonApp, viewsApp, notFoundRecordService, doc)
	return httpServer
}
